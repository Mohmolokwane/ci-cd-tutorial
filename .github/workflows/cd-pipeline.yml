name: CD Pipeline to Google Cloud Run (staging and production)

on:
  push:
    branches:
      - staging
  workflow_dispatch: {}
  release:
    types: [published]

env:
  PORT: 5001
  IMAGE: docker.io/dockerhub-bmolokwane/ci-cd-tutorial-app:${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    name: Setup, test, and build project
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Test application
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    name: Build, Authenticate and Deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin docker.io

      - name: Build Docker Image
        run: docker build -t $IMAGE .

      - name: Push Docker Image
        run: docker push $IMAGE

      - name: Enable Billing API (optional â€” normally done once)
        run: |
          gcloud services enable cloudbilling.googleapis.com --project=${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GCP Run - Production
        if: github.event_name == 'release' && github.event.action == 'published' && github.event.release.target_commitish == 'main'
        run: |
          gcloud run deploy ${{ vars.GCR_PROJECT_NAME }} \
            --region ${{ vars.GCR_REGION }} \
            --image $IMAGE \
            --platform "managed" \
            --allow-unauthenticated \
            --tag production

      - name: Deploy to GCP Run - Staging
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Deploying to staging environment"
          gcloud run deploy ${{ vars.GCR_STAGING_PROJECT_NAME }} \
            --region ${{ vars.GCR_REGION }} \
            --image $IMAGE \
            --platform "managed" \
            --allow-unauthenticated \
            --tag staging
